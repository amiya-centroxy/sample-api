# Change python version to one thats appropriate for your application.
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- main

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureServiceConnectionId: 'b843e926-887c-44f5-b8d2-892bc2979df8'

  

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  # Environment name
  environmentName: 'amiya'

  # Project root folder. Point to the folder containing manage.py file.
  projectRoot: $(System.DefaultWorkingDirectory)

  # Python version: 3.7
  pythonVersion: '3.7'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: BuildJob
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(pythonVersion)'
      displayName: 'Use Python $(pythonVersion)'    
    
    - task: PublishPipelineArtifact@1
      inputs:
       targetPath: '$(Pipeline.Workspace)'
       artifact: 'drop'
       fileSharePath: 'pipeline'

          
  - job: 
  - deployment: VMDeploy
    displayName: web
    environment:
     name: amiya
     resourceType: VirtualMachine
    strategy:
      rolling:
        maxParallel: 2  #for percentages, mention as x%
        preDeploy:
          steps:
             - task: DownloadBuildArtifacts@1
               inputs:
                 buildType: 'specific'
                 project: '4e1aa62e-bb39-424b-85d1-4946fab211b1'
                 pipeline: '22'
                 specificBuildWithTriggering: true
                 buildVersionToDownload: 'latest'
                 downloadType: 'single'
                 artifactName: 'drop'
                 downloadPath: '$(Build.ArtifactStagingDirectory)'
              
  

                  
        deploy:
          steps:
             
              - task: Bash@3
                inputs:
                  targetType: 'inline'
                  filePath: '$(Build.ArtifactStagingDirectory)'
                  script: |
                     ls -ltr
                     echo $ HELLO WORLD
                     cd '$(Build.ArtifactStagingDirectory)'
                     ls -ltr